<execute partitionSaveCount="1">

	<task name="drop_supplier_collapse">
	 <![CDATA[
	  drop table supplier_collapse
	 ]]>
	</task>

	<task name="create_supplier_collapse">
 <![CDATA[
	CREATE table `supplier_collapse` 
	 ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n' STORED AS TEXTFILE 
	AS                                              
	 SELECT s.goods_id ,s.entity_id,concat_ws(',',collect_list(concat_ws('_',s.supplier_id,cast(s.create_time as STRING)))) 
	 as supplier_ids
	   FROM supplier s
	  WHERE s.is_valid=1 AND s.pt='${context.date}'
	  GROUP BY s.goods_id ,s.entity_id
 ]]>
	</task>

	<task name="drop_warehouse_collapse">
		<![CDATA[
	  drop table warehouse_collapse
	 ]]>
	</task>

	<task name="create_warehouse_collapse">
		<![CDATA[
	CREATE table `warehouse_collapse`
	 ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n' STORED AS TEXTFILE
	AS
	 SELECT w.goods_id ,w.self_entity_id,concat_ws(',',collect_list(concat_ws('_',w.warehouse_id,cast(w.create_time as STRING))))
	 as warehouse_ids
	   FROM warehouse w
	  WHERE w.is_valid=1 AND w.pt='${context.date}'
	  GROUP BY w.goods_id ,w.self_entity_id
 ]]>
	</task>

	<task name="drop_stock_info_collapse">
		<![CDATA[
    drop table stock_info_collapse
   ]]>
	</task>


	<task name="create_stock_info_collapse">
	      <![CDATA[
	      CREATE table `stock_info_collapse`
	        ROW FORMAT DELIMITEd FIELDS TERMINATED BY '\t' LINES TERMINATED BY '\n' STORED AS TEXTFILE
	      AS
	        SELECT s.goods_id,s.entity_id,
	        concat_ws(',',collect_list(concat_ws('_',s.warehouse_id,cast( s.create_time as STRING))))
	        as stock_create_times,
	        concat_ws('\;', collect_list(
	                          CASE WHEN s.stock_num = 0.000000
	                               THEN '' 
	                               ELSE concat_ws('_',s.warehouse_id, cast(s.last_ver as STRING)) 
	                           END ))  as stock_info_warehouse_ids
	        FROM stock_info s
	        WHERE s.is_valid=1 AND s.pt='${context.date}'
	        GROUP BY s.goods_id,s.entity_id
	      ]]>
	</task>
	
	<joinTask name="supply_goods">
	 <![CDATA[	
	INSERT OVERWRITE TABLE supply_goods PARTITION (pt,pmod)
	SELECT
		id,
		entity_id,
		supplier_ids,
		warehouse_ids,
		self_entity_ids,
		stock_create_times,
		stock_info_warehouse_ids,
		bar_code,
		inner_code,
		name,
		short_code,
		spell,
		standard_goods_id,
		standard_bar_code,
		standard_name,
		unit_type,
		package_type,
		category_id,
		category_inner_code,
		type,
		num_unit_id,
		num_unit_name,
		weight_unit_id,
		weight_unit_name,
		main_unit_id,
		main_unit_name,
		sub_unit_id1,
		sub_unit_name1,
		sub_unit_conversion1,
		sub_unit_id2,
		sub_unit_name2,
		sub_unit_conversion2,
		sub_unit_id3,
		sub_unit_name3,
		sub_unit_conversion3,
		sub_unit_id4,
		sub_unit_name4,
		sub_unit_conversion4,
		specification,
		server,
		path,
		sort_code,
		period,
		memo,
		origin,
		price_unit_no,
		inventory_unit_no,
		percentage,
		has_degree,
	    is_sales,
		goods_plate_id,
		goods_plate_name,
		is_valid,
		create_time,
		op_time,
		last_ver,
		extend_fields,
		apply_time,
		pt,
	    '0' as pmod
FROM (	
	SELECT
		id,
		entity_id,
		'' as supplier_ids,
		'' as warehouse_ids,
		'' as self_entity_ids,
		'' as stock_create_times,
		'' as stock_info_warehouse_ids,
		bar_code,
		inner_code,
		name,
		'' as short_code,
		spell,
		'' as standard_goods_id,
		'' as standard_bar_code,
		'' as standard_name,
		unit_type,
		package_type,
		category_id,
		category_inner_code,
		type,
		num_unit_id,
		num_unit_name,
		weight_unit_id,
		weight_unit_name,
		main_unit_id,
		main_unit_name,
		sub_unit_id1,
		sub_unit_name1,
		sub_unit_conversion1,
		sub_unit_id2,
		sub_unit_name2,
		sub_unit_conversion2,
		sub_unit_id3,
		sub_unit_name3,
		sub_unit_conversion3,
		sub_unit_id4,
		sub_unit_name4,
		sub_unit_conversion4,
		specification,
		server,
		path,
		sort_code,
		period,
		memo,
		origin,
		price_unit_no,
		inventory_unit_no,
		'' as percentage,
		'' as has_degree,
		'' as is_sales,
		'' as goods_plate_id,
		goods_plate_name,
		is_valid,
		create_time,
		op_time,
		last_ver,
		extend_fields,
		'' as apply_time,
		pt,
		'0' as pmod
	FROM standard_goods  WHERE pt='${context.date}'
	  UNION ALL
	SELECT
		g.id,
		g.entity_id,
		s.supplier_ids,
		w.warehouse_ids,
		gss.self_entity_id_list as self_entity_ids,
		sic.stock_create_times,
		sic.stock_info_warehouse_ids,
		g.bar_code,
		g.inner_code,
		g.name,
		g.short_code,
		g.spell,
		g.standard_goods_id,
		g.standard_bar_code,
		g.standard_name,
		g.unit_type,
		g.package_type,
		g.category_id,
		category.inner_code as category_inner_code,
		g.type,
		'' as num_unit_id,
		'' as num_unit_name,
		'' as weight_unit_id,
		'' as weight_unit_name,
		'' as main_unit_id,
		'' as main_unit_name,
		'' as sub_unit_id1,
		'' as sub_unit_name1,
		'' as sub_unit_conversion1,
		'' as sub_unit_id2,
		'' as sub_unit_name2,
		'' as sub_unit_conversion2,
		'' as sub_unit_id3,
		'' as sub_unit_name3,
		'' as sub_unit_conversion3,
		'' as sub_unit_id4,
		'' as sub_unit_name4,
		'' as sub_unit_conversion4,
		g.specification,
		g.server,
		g.path,
		g.sort_code,
		g.period,
		g.memo,
		g.origin,
		'' as price_unit_no,
		'' as inventory_unit_no,
		g.percentage,
		g.has_degree,
		g.is_sales,
		g.goods_plate_id,
		'' as goods_plate_name,
		g.is_valid,
		g.create_time,
		g.op_time,
		g.last_ver,
		g.extend_fields,
		g.apply_time,
		g.pt,
		'0' as pmod
	FROM goods g LEFT JOIN supplier_collapse s ON ( g.entity_id = s.entity_id AND g.id = s.goods_id )
	             LEFT JOIN warehouse_collapse w ON ( g.entity_id = w.self_entity_id AND g.id = w.goods_id )
	             LEFT JOIN goods_sync_shop gss
	               on ( g.entity_id = gss.entity_id 
	                    AND gss.is_valid=1 
	                    AND g.id = gss.goods_id 
	                    AND gss.pt='${context.date}')
	             LEFT JOIN stock_info_collapse sic on ( g.entity_id = sic.entity_id AND g.id = sic.goods_id)
	             LEFT JOIN supply_category category 
	                ON(g.entity_id = category.entity_id AND g.category_id = category.id 
	                   AND category.is_valid=1 AND category.pt='${context.date}')
	WHERE g.pt='${context.date}' AND g.entity_id is not null ) as tmp
   ]]>
	</joinTask>

</execute>